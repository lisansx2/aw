package cn.com.cslc.aw.core.common.domain;
// Generated 2017-9-19 15:59:38 by Hibernate Tools 5.1.2.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import cn.com.cslc.aw.agent.domain.SysOrgAgent;
import cn.com.cslc.aw.customer.domain.SysOrgCustomer;

/**
 * SysOrg generated by hbm2java
 */
@Entity
@Table(name = "SYS_ORG")
public class SysOrg  extends BaseEntity  implements Comparable<SysOrg>{

	private SysOrg parent;
	private String name;
	private String parentIds;
	private Short isShow;
	private Short hasChildren;
	private Long weight;
	private String code;
	private String parentCode;
	private Long delFlag;
	private Set<SysOrgAgent> sysOrgAgents = new HashSet<SysOrgAgent>(0);
	private Set<SysOrgCustomer> sysOrgCustomers = new HashSet<SysOrgCustomer>(0);
	private Set<SysUserOrg> sysUserOrgs = new HashSet<SysUserOrg>(0);
	private Set<SysOrg> children = new HashSet<SysOrg>(0);
	
	private SysProvince sysProvince;

	private SysOrgType sysOrgType;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PARENT_ID")
	public SysOrg getParent() {
		return this.parent;
	}

	public void setParent(SysOrg parent) {
		this.parent = parent;
	}

	@Column(name = "NAME", nullable = false, length = 200)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "PARENT_IDS", length = 400)
	public String getParentIds() {
		return this.parentIds;
	}

	public void setParentIds(String parentIds) {
		this.parentIds = parentIds;
	}

	@Column(name = "IS_SHOW", precision = 3, scale = 0)
	public Short getIsShow() {
		return this.isShow;
	}

	public void setIsShow(Short isShow) {
		this.isShow = isShow;
	}

	@Column(name = "HAS_CHILDREN", precision = 3, scale = 0)
	public Short getHasChildren() {
		return this.hasChildren;
	}

	public void setHasChildren(Short hasChildren) {
		this.hasChildren = hasChildren;
	}

	@Column(name = "WEIGHT", precision = 10, scale = 0)
	public Long getWeight() {
		return this.weight;
	}

	public void setWeight(Long weight) {
		this.weight = weight;
	}

	@Column(name = "CODE", length = 20)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "PARENT_CODE", length = 20)
	public String getParentCode() {
		return this.parentCode;
	}

	public void setParentCode(String parentCode) {
		this.parentCode = parentCode;
	}
	
	@Column(name = "DEL_FLAG", length = 1)
	public Long getDelFlag() {
		return delFlag;
	}

	public void setDelFlag(Long delFlag) {
		this.delFlag = delFlag;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sysOrg")
	public Set<SysOrgAgent> getSysOrgAgents() {
		return this.sysOrgAgents;
	}

	public void setSysOrgAgents(Set<SysOrgAgent> sysOrgAgents) {
		this.sysOrgAgents = sysOrgAgents;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sysOrg")
	public Set<SysOrgCustomer> getSysOrgCustomers() {
		return this.sysOrgCustomers;
	}

	public void setSysOrgCustomers(Set<SysOrgCustomer> sysOrgCustomers) {
		this.sysOrgCustomers = sysOrgCustomers;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sysOrg")
	public Set<SysUserOrg> getSysUserOrgs() {
		return this.sysUserOrgs;
	}

	public void setSysUserOrgs(Set<SysUserOrg> sysUserOrgs) {
		this.sysUserOrgs = sysUserOrgs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "parent")
	public Set<SysOrg> getChildren() {
		return this.children;
	}

	public void setChildren(Set<SysOrg> children) {
		this.children = children;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "province_id")
	public SysProvince getSysProvince() {
		return this.sysProvince;
	}

	public void setSysProvince(SysProvince sysProvince) {
		this.sysProvince = sysProvince;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "org_type_id")
	public SysOrgType getSysOrgType() {
		return this.sysOrgType;
	}

	public void setSysOrgType(SysOrgType sysOrgType) {
		this.sysOrgType = sysOrgType;
	}

	@Override
	public int compareTo(SysOrg o) {
		return this.getCode().compareTo(o.getCode());
	}
}
